In this assignment, you will implement three different shading algorithms: (1) Flat (per-face) 
shading, (2) Gouraud (per-vertex) shading, and (3) Phong (per-fragment) shading. We have 
discussed these shading methods in detail in our class. You will have one canvas divided into 
three viewports, as shown below. Each viewport will have its own objects and will allow exclusive 
interaction using a mouse, i.e., when you are interacting with objects in one viewport, the objects 
in the other two viewports should stay as it is (see video for demonstration). You can use your 
own color for the objects but the structure and orientation of the objects in the scene should be 
the same. To allow interaction, you will have to keep track of your mouse click location, detect 
which viewport has been selected, and apply all transformations only to the selected viewport. 
From left to right, viewport one will have flat shading, viewport two will have per-vertex shading, 
and viewport three will have per-fragment shading. To do these, you will have to write six shader 
routines- (1 vertex shader, 1 fragment shader for flat shading), (1 vertex shader, 1 fragment 
shader for per-vertex shading), and (1 vertex shader, 1 fragment shader for per-fragment 
shading). So, in your drawScene() function, you will have three viewports, and each viewport will 
use one of those shading methods. For this, you will have to switch between different shaders. 
Please check your slides where I have discussed the structure of your drawScene() function and 
showed you how you can switch to a different shading method. 
 
